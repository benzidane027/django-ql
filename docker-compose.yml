version: '3'
networks:
  app_net_ql:
    ipam:
      config:
        - subnet: 15.0.0.0/24

services:

  db:
    image: postgres:15
    restart: always
    container_name: postgres
    volumes:
      - ./data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
    environment:
      - PGDATA=/var/lib/postgresql/data/
    networks:
      app_net_ql:
        ipv4_address: 15.0.0.20

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    env_file:
      - ./app/.env
  api:
    build: ./app
    restart: always
    container_name: django
    command: bash -c  "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./app:/usr/src/app
    # ports:
    #   - 8000:8000
    env_file:
      - ./app/.env
    depends_on:
      db: 
        condition: service_healthy
        restart: true
    networks:
      app_net_ql:
        ipv4_address: 15.0.0.10

  proxy:
    image: nginx:latest
    restart: always
    container_name: nginx
    depends_on:
      - api
    volumes:
      - ./conf/cert.crt:/etc/nginx/ssl/cert.crt
      - ./conf/key.key:/etc/nginx/ssl/key.key
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/logs:/var/log/nginx

    ports:
      - "443:443"
    networks:
      app_net_ql:
        ipv4_address: 15.0.0.30
    env_file:
      - ./app/.env

volumes:
  data:
  app:
  conf:
